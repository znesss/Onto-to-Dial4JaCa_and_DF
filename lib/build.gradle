/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */
 


plugins {
    // Apply the java-library plugin for API and implementation separation.
	id 'java-library'
    id 'application'
}

allprojects {

	repositories {
    	maven { url "http://jacamo.sourceforge.net/maven2"; setAllowInsecureProtocol(true)}
    	maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master"; allowInsecureProtocol = true}
    	maven { url "https://repo.gradle.org/gradle/libs-releases-local"; allowInsecureProtocol = true}    
    	maven { url "https://jitpack.io" }
    	//maven { url "https://jade.tilab.com/maven/"}
    	//maven { url "https://repo1.maven.org/maven2/"}
    	//maven { url "https://jade.tilab.com/maven/" }

    	flatDir {
       		dirs 'lib'
    	}

    	mavenCentral()    
	}
}


dependencies {
    // Use JUnit Jupiter for testing.
   testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	
	
	implementation group: 'org.jacamo', name: 'jacamo', version: '1.0'
	
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'


    // owl-api
    //implementation 'net.sourceforge.owlapi:owlapi-distribution:4.5.4'
    //implementation 'net.sourceforge.owlapi:org.semanticweb.hermit:1.3.8.413'

	// asSyntax
	//?
	
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation group: 'net.sourceforge.owlapi', name: 'owlapi-distribution', version: '5.1.16'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
}


tasks.withType(ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}


tasks.named("distTar") {
    duplicatesStrategy = 'include'
}

tasks.named("distZip") {
    duplicatesStrategy = 'include'
}
mainClassName = 'Onto2DD/FileGeneratorInterface'

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
    delete 'lib'
}
